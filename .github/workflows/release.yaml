name: release-helm-chart

on:
  push:
    branches:
      - main
    paths:
      - "charts/**"

jobs:
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
      id-token: write # needed for keyless signing

    runs-on: ubuntu-latest
    outputs:
      changed_charts: ${{ steps.chart_releaser.outputs.changed_charts }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: latest

      - name: Run chart-releaser
        id: chart_releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_GENERATE_RELEASE_NOTES: true

      # see https://github.com/helm/chart-releaser/issues/183
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" "oci://ghcr.io/tibiadata/charts"
          done

  argocd:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Helm Chart versions
        id: get_chart_versions
        uses: jacobtomlinson/gha-read-helm-chart@master
        with:
          path: ${{ needs.release.outputs.changed_charts }}

      - name: Trigger workflow in tibiadata-argocd-app-of-apps repo
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: TibiaData/tibiadata-argocd-app-of-apps
          event-type: bump-tibiadata-helm-chart-versions
          client-payload: '{"chart_name": "${{ steps.get_chart_versions.outputs.name }}", "chart_version": "${{ steps.get_chart_versions.outputs.version }}"}'
